name: Init Repository sync

on:
  workflow_dispatch:
    inputs:
      method:
        description: 'clone method: shadow, submodule or subtree'
        required: true
        default: shadow

permissions:
  contents: write

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Create workspace folder
        run: mkdir -p repos

      - name: Check out this repo into repos/
        uses: actions/checkout@v3
        with:
          path: repos/${{ github.event.repository.name }}
          fetch-depth: 0
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Authenticate GH CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${GITHUB_TOKEN}" | gh auth login --with-token

      - name: Clone all other repos for this owner
        env:
          OWNER: ${{ github.repository_owner }}
          THIS_REPO: ${{ github.event.repository.name }}
        run: |
          mkdir -p repos
          gh repo list "$OWNER" --limit 100 --json name -q '.[].name' \
            | while read repo; do
                if [[ "$repo" != "$THIS_REPO" ]]; then
                  gh repo clone "${OWNER}/${repo}" "repos/${repo}"
                fi
              done

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r tooling/requirements.txt

      - name: Initialize repositories
        run: |
          METHOD="${{ github.event.inputs.method || 'shadow' }}"
          python tooling/sync_repos.py init \
            --method "$METHOD"

      - name: Commit & push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: initial repository sync"
            git push
          fi
