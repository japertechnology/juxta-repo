name: Init Repository Sync

on:
  workflow_dispatch:
    inputs:
      method:
        description: 'clone method: shadow, submodule or subtree'
        required: true
        default: shadow

permissions:
  contents: write

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r tooling/requirements.txt

      - name: Initialize repositories
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Determine the owner (org or user) from the repo slug "owner/name"
          OWNER="${GITHUB_REPOSITORY%/*}"
          # Fallback to 'shadow' if somehow the input is empty
          METHOD="${{ github.event.inputs.method || 'shadow' }}"
          python tooling/sync_repos.py init \
            --org "$OWNER" \
            --method "$METHOD"

      - name: Commit & push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: initial repository sync"
            git push
          fi
